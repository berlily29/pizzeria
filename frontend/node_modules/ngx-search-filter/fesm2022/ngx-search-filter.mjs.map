{"version":3,"file":"ngx-search-filter.mjs","sources":["../../../projects/ngx-search-filter/src/lib/ngx-filter.pipe.ts","../../../projects/ngx-search-filter/src/lib/ngx-search-filter.module.ts","../../../projects/ngx-search-filter/src/public-api.ts","../../../projects/ngx-search-filter/src/ngx-search-filter.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class NgxFilterPipe implements PipeTransform {\n\n  /**\n     * @param items object from array\n     * @param term term's search\n     * @param excludes array of strings which will ignored during search\n     */\n  transform(items: any, term: string, excludes: any = []): any {\n    if (!term || !items) return items;\n\n    return NgxFilterPipe.filter(items, term, excludes);\n  }\n\n  /**\n   *\n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * @param excludes List of keys which will be ignored during search\n   *\n   */\n  static filter(items: Array<{ [key: string]: any }>, term: string, excludes: any): Array<{ [key: string]: any }> {\n\n    const toCompare = term.toLowerCase();\n\n    function checkInside(item: any, term: string) {\n      \n      if (typeof item === \"string\" && item.toString().toLowerCase().includes(toCompare)) {\n        return true;\n      }\n\n      for (let property in item) {\n        if (item[property] === null || item[property] == undefined || excludes.includes(property)) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        }\n        else if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFilterPipe } from './ngx-filter.pipe';\n\n@NgModule({\n  declarations: [\n    NgxFilterPipe\n  ],\n  imports: [],\n  exports: [\n    NgxFilterPipe\n  ]\n})\nexport class NgxSearchFilterModule { }\n","/*\n * Public API Surface of ngx-search-filter\n */\n\nexport * from './lib/ngx-filter.pipe';\nexport * from './lib/ngx-search-filter.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAMa,aAAa,CAAA;AAExB;;;;AAIK;AACL,IAAA,SAAS,CAAC,KAAU,EAAE,IAAY,EAAE,WAAgB,EAAE,EAAA;AACpD,QAAA,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK;AAAE,YAAA,OAAO,KAAK,CAAC;QAElC,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KACpD;AAED;;;;;;AAMG;AACH,IAAA,OAAO,MAAM,CAAC,KAAoC,EAAE,IAAY,EAAE,QAAa,EAAA;AAE7E,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAErC,QAAA,SAAS,WAAW,CAAC,IAAS,EAAE,IAAY,EAAA;AAE1C,YAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AACjF,gBAAA,OAAO,IAAI,CAAC;aACb;AAED,YAAA,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACzB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACzF,SAAS;iBACV;gBACD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;oBACtC,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;AACrC,wBAAA,OAAO,IAAI,CAAC;qBACb;iBACF;AACI,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AACpE,oBAAA,OAAO,IAAI,CAAC;iBACb;aACF;AACD,YAAA,OAAO,KAAK,CAAC;SACd;AAED,QAAA,OAAO,KAAK,CAAC,MAAM,CAAC,UAAU,IAAI,EAAA;AAChC,YAAA,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjC,SAAC,CAAC,CAAC;KACJ;8GAjDU,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;4GAAb,aAAa,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA,CAAA,EAAA;;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACd,oBAAA,IAAI,EAAE,KAAK;AACZ,iBAAA,CAAA;;;MCOY,qBAAqB,CAAA;8GAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAArB,qBAAqB,EAAA,YAAA,EAAA,CAP9B,aAAa,CAAA,EAAA,OAAA,EAAA,CAIb,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA;+GAGJ,qBAAqB,EAAA,CAAA,CAAA,EAAA;;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBATjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,aAAa;AACd,qBAAA;AACD,oBAAA,OAAO,EAAE,EAAE;AACX,oBAAA,OAAO,EAAE;wBACP,aAAa;AACd,qBAAA;AACF,iBAAA,CAAA;;;ACXD;;AAEG;;ACFH;;AAEG;;;;"}